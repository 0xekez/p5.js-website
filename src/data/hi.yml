Home: "सभी"
Download: "डाउनलोड"
Start: "शुरू "
Reference: "संदर्भ"
Libraries: "लाइब्रिरीज़"
Learn: "सीखना"
Examples: "उदाहरण"
Books: "पुस्तकें"
Community: "समुदाय"
Contribute: "योगदान करना"
Forum: "फोरम"

footer1: "p5.js "
footer2: " द्वारा बनाया गया था और सहयोगियों के एक समुदाय द्वारा विकसित किया गया है, जिसके समर्थन से "
footer3: " और "
footer4: "Identity and graphic design by "

home:
  Download: "डाउनलोड"
  Start: "शुरू"
  Reference: "संदर्भ"
  Libraries: "लाइब्रिरीज़"
  Learn: "सीखना"
  Community: "समुदाय"
  p1x1: "नमस्कार! p5.js एक जावास्क्रिप्ट लाइब्रेरी है जो "
  p1x2: ", के मूल लक्ष्य के साथ शुरू होती है कलाकारों, डिजाइनरों, शिक्षकों और शुरुआती लोगों के लिए कोडिंग को सुलभ बनाना, और आज के वेब के लिए इसे पुन: स्थापित करना।"
  p2x1: "एक सॉफ्टवेयर स्केचबुक के मूल रूप का उपयोग करते हुए, p5.js में ड्राइंग कार्यक्षमता का एक पूरा सेट है। हालाँकि, आप अपने ड्राइंग कैनवास तक सीमित नहीं हैं, आप अपने पूरे ब्राउज़र पेज को अपना स्केच मान सकते हैं! इसके लिए, p5.js में एडऑन"
  libraries: " लाइब्रिरीज़"
  p2x2: " है इससे बातचीत करना "
  interact: " आसान हो जाता है"
  p2x3: "ेक्स्ट, इनपुट, वीडियो, वेब कैमरा और ध्वनि सहित अन्य HTML5 ऑब्जेक्ट्स के साथ."
  p3x1: "p5.js एक नई व्याख्या है, एक अनुकरण या   ोर्ट नहीं है, और यह सक्रिय विकास में है।"
  p3x2: "नए p5.js वेब संपादक में अब इसे आज़माएं!"
  sketch_by: "द्वारा"
  sketch_info: "सीसी फेस्ट! 10 नवंबर @ NYU ITP"
  sketch_info_link: "http://ccfest.rocks/"

copyright:
  copyright1: "P5.js पुस्तकालय मुफ्त सॉफ्टवेयर है; आप नि: शुल्क सॉफ्टवेयर फाउंडेशन, संस्करण 2.1 द्वारा प्रकाशित "
  copyright2: " के तहत इसे पुनर्वितरित कर सकते हैं और / या संशोधित कर सकते हैं। भाषा के लिए संदर्भ एक लाइसेंस के तहत है"
  copyright3: " जो गैर-वाणिज्यिक उद्देश्यों के लिए इस सामग्री का पुन: उपयोग करना "
  copyright4: " संभव बनाता है यदि इसे श्रेय दिया जाता है।"

get started:
  get-started-title: "यहाँ से शुरुआत करें"
  get-started1: "यह पृष्ठ एक p5.js परियोजना की स्थापना और आपका पहला स्केच बनाने के माध्यम से चलता है।"
  get-started2: "यदि आप नए  "
  get-started3: "p5.js Web Editor से शुरुआत करना चाहते हैं"
  get-started4: ", आप अपने पहले स्केच के लिए "
  get-started5: "नीचे जा सकते हैं"
  download-title: "डाउनलोड और फ़ाइल सेटअप"
  download1: "शुरू करने का सबसे आसान तरीका खाली उदाहरण का उपयोग करना है जो "
  download2: "p5.js पूर्ण के साथ आता है"
  download3: " डाउनलोड."
  download4: "यदि आप index.html में देखते हैं, तो आप देखेंगे कि यह फ़ाइल p5.js. से लिंक करता है यदि आप छोटा संस्करण (तेज पृष्ठ लोड करने के लिए संपीड़ित) का उपयोग करना चाहते हैं, तो लिंक को p5.min.js. में बदल दें।"
  download5: "वैकल्पिक रूप से, आप ऑनलाइन होस्ट की गई p5.js फ़ाइल से लिंक कर सकते हैं। P5.js के सभी संस्करण एक CDN (सामग्री वितरण नेटवर्क) में संग्रहीत हैं। आप इन संस्करणों का इतिहास यहां देख सकते हैं:"
  download6: "। इस स्थिति में आप इस लिंक को बदल सकते हैं:"
  download7: "एक नमूना HTML पृष्ठ इस तरह दिख सकता है:"
  download8: "आप इस टेम्पलेट से भी शुरुआत कर सकते हैं "
  download9: "।"
  environment-title: "वातावरण"
  environment1: "आप उपयोग कर सकते हैं "
  environmentlink: "http://en.wikipedia.org/wiki/Source_code_editor"
  environment2: " कोड संपादक "
  environment3: "आपके पसन्द का। "
  environment4: " के साथ स्थापित करने के निर्देश नीचे दिए गए हैं, अन्य अच्छे संपादक विकल्प हैं "
  environment5: " और "
  environment6: "यदि आप एक स्क्रीन रीडर उपयोगकर्ता हैं और p5 वेब संपादक का उपयोग नहीं कर रहे हैं, तो आप उपयोग करना चाह सकते हैं "
  environment7: " या "
  environment8: " sublime खोलें। फ़ाइल मेनू पर जाएं और open चुनें  ... और उस फ़ोल्डर का चयन करें, जिसमें आपकी html और js फाइलें स्थित हैं। बाईं ओर के साइडबार में, अब आपको सबसे ऊपर फ़ोल्डर का नाम देखना चाहिए, जिसमें फाइलों की एक सूची शामिल है नीचे सीधे फ़ोल्डर।"
  environment9: "अपनी  sketch.js फ़ाइल पर क्लिक करें और यह दाईं ओर खुलेगी जहाँ आप इसे संपादित कर सकते हैं। "
  environment10: "p5 स्टार्टर कोड sublime संपादक में खोला गया।"
  environment11: "अपने ब्राउज़र में अपने फ़ाइल प्रबंधक पर डबल क्लिक करके index.html फ़ाइल खोलें या टाइप करें:"
  environment12: "file:///the/file/path/to/your/html"
  environment13: " अपने स्केच को देखने के लिए पता बार में।"
  your-first-sketch-title: "आपका पहला स्केच"
  your-first-sketch-intro1: "प्रॉसिसिंग उपयोगकर्ता देख सकते हैं "
  your-first-sketch-intro2: "https://github.com/processing/p5.js/wiki/Processing-transition"
  your-first-sketch-intro3: "Processing transition tutorial"
  your-first-sketch-intro4: "अपने संपादक में, निम्न टाइप करें:"
  your-first-sketch2: "कोड की इस लाइन का अर्थ है \"एक दीर्घवृत्त खींचना, जिसमें केंद्र बाईं ओर से 50 पिक्सेल और ऊपर से 50 पिक्सेल नीचे, चौड़ाई और ऊँचाई 80 पिक्सेल \" है।"
  your-first-sketch3: "अपना स्केच सहेजें और अपने ब्राउज़र में अपने पृष्ठ दृश्य को ताज़ा करें। यदि आपने सब कुछ सही ढंग से टाइप किया है, तो आप इसे डिस्प्ले विंडो में देखेंगे:"
  your-first-sketch4: "नोट: यदि आप एक स्क्रीन रीडर का उपयोग कर रहे हैं, तो आपको P5 ऑनलाइन संपादक में सुलभ आउटपुट को चालू करना होगा, संपादक के बाहर आपको अपने HTML में एक्सेसिबिलिटी लाइब्रेरी जोड़ना होगा। "
  your-first-sketch5: "स्क्रीन रीडर के साथ p5 का उपयोग करने के बारे में जानने के लिए यहां क्लिक करें"
  your-first-sketch6: " और"
  your-first-sketch7: "अक्सेसिबिलिटी लाइब्रेरी बारे में अधिक जानने के लिए"
  your-first-sketch8: "कैनवास की चौड़ाई और ऊंचाई 50 के बीच की स्थिति 80 x और 80 y है"
  your-first-sketch9: "यदि आपने इसे सही ढंग से टाइप नहीं किया है, तो आप कुछ भी नहीं देख सकते हैं। यदि ऐसा होता है, तो सुनिश्चित करें कि आपने उदाहरण कोड को बिल्कुल कॉपी किया है: संख्याओं को कोष्ठक के भीतर समाहित किया जाना चाहिए और उनमें से प्रत्येक के बीच अल्पविराम होना चाहिए, और पंक्ति को अर्धविराम के साथ समाप्त होना चाहिए।"
  your-first-sketch10: "प्रोग्रामिंग के साथ शुरू होने के बारे में सबसे कठिन चीजों में से एक यह है कि आपको सिंटैक्स के बारे में बहुत विशिष्ट होना चाहिए। ब्राउज़र हमेशा यह जानने के लिए पर्याप्त स्मार्ट नहीं है कि आपका क्या मतलब है, और विराम चिह्न के प्लेसमेंट के बारे में काफी उधम मचा सकता है। आपको थोड़ी सी प्रैक्टिस से इसकी आदत हो जाएगी। आपके द्वारा उपयोग किए जा रहे ब्राउज़र के आधार पर, आप जावास्क्रिप्ट \" कंसोल \" को देखकर त्रुटियों को भी देख सकते हैं। Chrome में, उदाहरण के लिए, यह View> Developer> JavaScript कंसोल के अंतर्गत है।"
  your-first-sketch11: "अगला, हम एक स्केच के आगे छोड़ेंगे जो थोड़ा और रोमांचक है। पाठ को अंतिम उदाहरण से हटाएं, और यह प्रयास करें:"
  your-first-sketch12: "यह प्रोग्राम एक ऐसी खिड़की बनाता है जो 640 पिक्सेल चौड़ी और 480 पिक्सेल ऊँची होती है, और फिर माउस की स्थिति में सफेद वृत्त खींचना शुरू कर देती है। जब एक माउस बटन दबाया जाता है, तो सर्कल का रंग बदलकर काला हो जाता है। हम इस कार्यक्रम के तत्वों के बारे में बाद में विस्तार से बताएंगे। अभी के लिए, कोड चलाएं, माउस को स्थानांतरित करें, और इसे अनुभव करने के लिए क्लिक करें।"
  your-first-sketch13: "माउस के पथ का अनुसरण करते हुए कैनवास पर कई वृत्त खींचे जाते हैं"
  what-next-title: "और क्या हो सकता है"
  processing-transition1: " "
  processing-transition2: "https://github.com/processing/p5.js/wiki/Processing-transition"
  processing-transition3: "प्रोसेसिंग ट्रांस्फ़ॉर्म ट्यूटोरियल"
  processing-transition4: " पढ़ें, प्रोसेसिंग से P5js में कैसे परिवर्तन करें, और उनके बीच मुख्य अंतर।"
  reference1: "पूर्ण प्रलेखन के लिए "
  reference2: " संदर्भ"
  reference3: " देखें।"
  learn1: "अधिक जानने के लिए "
  learn2: "सीखना "
  learn3: " पृष्ठ और "
  learn4: "उदाहरण"
  learn5: " पृष्ठ देखें।"
  learn6: "यदि आप एक स्क्रीनरीडर के साथ P5 का उपयोग करना चाहते हैं, तो एक "
  learn7: "स्क्रीनरीडर ट्यूटोरियल के साथ P5 की जांच करें।"
  book1: "इस ट्यूटोरियल के कुछ हिस्सों को लॉरेन मैकार्थी, केसी रेज़ और बेन फ्राई, ओ'रेली / मेक 2015 द्वारा पुस्तक से अनुकूलित किया गया था। "
  book2: 2015 लॉरेन मैकार्थी, केसी रिया और बेन फ्राई। सर्वाधिकार सुरक्षित।

download:
  Download: "डाउनलोड"
  complete-library-title: "पूरी लाइब्रेरी"
  p5.js-complete: " पूर्ण p5.js"
  includes-1: "शामिल हैं:"
  includes-2: "p5.js, p5.dom.js, p5.sound.js और एक उदाहरण परियोजना है"
  includes-3: " संस्करण "
  single-files-title: "एक दस्तावेज "
  single-file: "एक दस्तावेज: "
  p5.js-uncompressed: "पूर्ण असम्बद्ध संस्करण"
  compressed: "संकुचित संस्करण"
  link: "लिंक: "
  statically-hosted-file: "स्टेटिकली होस्ट की गई फ़ाइल"
  editor-title: "संपादक"
  p5.js-editor: "p5.js वेब एडिटर"
  editor-includes: "P5.js वेब एडिटर का उपयोग करके कोडिंग शुरू करें, कोई सेटअप आवश्यक नहीं है!"
  etc-title: "आदि"
  older-releases: "पुराने रिलीज / चैंज "
  report-bugs: "बग रिपोर्ट करें "
  supported-browsers: "समर्थित ब्राउज़र "
  support-title: "समर्थन p5.js!"
  support-1: "p5.js फ्री, ओपन-सोर्स सॉफ्टवेयर है। हम अपने समुदाय को यथासंभव खुला और समावेशी बनाना चाहते हैं। आप एक व्यक्ति, एक स्टूडियो या एक शैक्षिक संस्थान के रूप में प्रोसेसिंग फाउंडेशन के "
  support-2: "सदस्य बनकर"
  support-3: " इस काम का समर्थन कर सकते हैं। "
  support-4: " आप सदस्यता खरीदे बिना"
  support-5: " भी दान कर सकते हैं। "
  support-6: "व्यक्तिगत"
  support-7: "$25"
  support-8: "स्टूडियो"
  support-9: "$250"
  support-10: "शैक्षिक संस्थान"
  support-11: "$5/छात्र or $500"
  support-12: "आपकी सदस्यता सॉफ़्टवेयर डेवलपमेंट (p5.js, प्रोसेसिंग, प्रोसेसिंग, एंड्रॉइड और एआरएम उपकरणों के लिए प्रोसेसिंग, कोड उदाहरणों और ट्यूटोरियल जैसे शिक्षा संसाधनों, "
  support-13: "फैलोशिप"
  support-14: " और "
  support-15: "सामुदायिक कार्यक्रमों "
  support-16: " के लिए समर्थन करती है। हमें आपकी सहायता की आवश्यकता है!"
  support-17: "पिट्सबर्ग में क्रिएटिव इंक्वायरी के लिए CMU स्टूडियो में p5.js योगदानकर्ताओं का सम्मेलन (छवि क्रेडिट: तायून चोई)"
  support-18: "प्रोसेसिंग फेलो सास्किया फ्रीके लंदन में कोड लिबरेशन एक्स प्रोसेसिंग वर्कशॉप आयोजित कर रहा है (इमेज क्रेडिट: कोड लिबरेशन फाउंडेशन)"
  support-19: "एसएफपीसी के साथ सम्मेलन में सीखना, सिखाना सीखना (छवि क्रेडिट: कीरा साइमन-कैनेडी)"
  support-20: "कोड आर्ट मियामी में प्रोसेसिंग फाउंडेशन फेलो कैसी तारकाजियान की कार्यशाला (छवि क्रेडिट: क्रिश्चियन एरेवलो फोटोग्राफी)"
  support-21: "साइनिंग कोडर्स p5.js कार्यशाला में टैयून चोई और एएसएल दुभाषिया (छवि क्रेडिट: टायून चोई)"
  support-22: "कोड किकऑफ़ की Google समर (छवि क्रेडिट: ताइओन चोई)"
  support-23: "कोड आर्ट मियामी में प्रोसेसिंग फाउंडेशन फेलो कैसी तारकाजियान की कार्यशाला (छवि क्रेडिट: क्रिश्चियन एरेवलो फोटोग्राफी)"
  support-24: "लुइसा परेरा और येसेउल सांग टायून चोई की अगुवाई में एक सांकेतिक भाषा आधारित p5.js कार्यशाला को सुविधाजनक बनाने में मदद करते हैं (छवि क्रेडिट: तायून चोई)"
  support-25: "पिट्सबर्ग में क्रिएटिव इंक्वायरी के लिए CMU स्टूडियो में p5.js योगदानकर्ताओं का सम्मेलन (छवि क्रेडिट: तायून चोई)"
  support-26: "प्रोसेसिंग फ़ेलो डिजिटल सिटिज़ंस लैब इंटरनेशनल सेंटर ऑफ़ फ़ोटोग्राफ़ी में STEM शिक्षण पर एक पैनल होस्ट करता है (छवि क्रेडिट: इंटरनेशनल सेंटर ऑफ़ फ़ोटोग्राफ़ी)"
  support-27: "सैंटियागो, मोरागा के नेतृत्व में सैंटियागो, चिली में p5.js कार्यशाला में प्रतिभागी (छवि क्रेडिट: आरोन मोंटोया-मोरागा।)"
  support-28: "क्लेयर केर्नी-वोल्पे ने एक साइन लैंग्वेज आधारित p5.js वर्कशॉप की सुविधा दी, जिसका नेतृत्व ताइओन चोई (छवि क्रेडिट: तायून चोई) ने किया"
  support-29: "प्रोसेसिंग फाउंडेशन फेलो DIY गर्ल्स लॉस एंजेल्स में एक क्रिएटिव कोडिंग प्रोग्राम चलाती हैं (इमेज क्रेडिट: DIY गर्ल्स)"
  support-30: "प्रोसेसिंग डिजिटल डिजिटल लैब प्रयोगशाला"
  support-31: "UCLA DMA और NYU ITP में Bicoastal p5.js मीटअप"
  support-32: "प्रोसेसिंग फाउंडेशन"
  support-33: " मूल प्रोसेसिंग सॉफ्टवेयर के साथ एक दशक से अधिक काम करने के बाद 2012 में स्थापित किया गया था। फाउंडेशन का मिशन दृश्य कला के भीतर सॉफ्टवेयर साक्षरता को बढ़ावा देना है, और प्रौद्योगिकी से संबंधित क्षेत्रों के भीतर दृश्य साक्षरता - और इन क्षेत्रों को विविध समुदायों के लिए सुलभ बनाना है। हमारा लक्ष्य सभी हितों और पृष्ठभूमि के लोगों को सशक्त बनाना है कि कैसे कोड के साथ रचनात्मक कार्य करना सीखें और विशेष रूप से उन लोगों के लिए, जिनके पास अन्यथा इन उपकरणों और संसाधनों तक पहुंच नहीं है।"

learn:
  learn-title: "सीखना"
  learn1: "ये ट्यूटोरियल विशेष विषयों के अधिक गहराई या चरण-दर-चरण साक्षात्कार प्रदान करते हैं "
  learn2: "उदाहरण पृष्ठ देखें"
  learn3: "विभिन्न p5.js विषयों के छोटे प्रदर्शनों को देखने के लिए।"
  introduction-to-p5js-title: "P5.js का परिचय"
  hello-p5js-title: "नमस्कार p5.js"
  hello-p5js: "यह लघु वीडियो आपको लाइब्रेरी से परिचित कराएगा और आप इसके साथ क्या कर सकते हैं।"
  getting-started-title: "शुरू करना"
  getting-started: "P5.js में आपका स्वागत है! <br> यह परिचय p5.js परियोजना की स्थापना की मूल बातें शामिल करता है।"
  p5js-overview-title: "p5.js अवलोकन"
  p5js-overview: "P5.js. की मुख्य विशेषताओं का अवलोकन"
  p5js-processing-title: "p5.js और प्रोसेसिंग"
  p5js-processing: "दोनों के बीच मुख्य अंतर, और एक से दूसरे में कैसे परिवर्तित किया जाए।"
  p5-screen-reader-title: "स्क्रीन रीडर के साथ p5"
  p5-screen-reader: "P5 सेट करना ताकि इसे स्क्रीन रीडर के साथ आसानी से उपयोग किया जा सके।"
  using-local-server-title: "थानीय सर्वर का उपयोग करना"
  using-local-server: "म  ैक OSX, विंडोज या लिनक्स पर एक स्थानीय सर्वर कैसे सेट करें।"
  connecting-p5js-title: "कनेक्टिंग p5.js"
  creating-libraries-title: " लाइब्रिरीज़ बनाना "
  creating-libraries: "P5.js एडोन लाइब्रेरीज़ बनाना।"
  nodejs-and-socketio-title: "node.js और socket.io"
  nodejs-and-socketio: "P5.js के साथ एक node.js सर्वर का उपयोग करके, सॉकेट के माध्यम से संचार।"
  programming-topics-title: "प्रोग्रामिंग विषय"
  beyond-the-canvas-title: "कैनवास से परे"
  beyond-the-canvas: "कैनवास से परे पृष्ठ पर तत्वों का निर्माण और हेरफेर।"
  3d-webgl-title: "3 डी / WebGL"
  3d-webgl: "WEBGL मोड का उपयोग करके p5.js में उन्नत ग्राफिक्स एप्लिकेशन विकसित करना।"
  color-title: "रंग"
  color: "डिजिटल रंग से परिचय।"
  coordinate-system-and-shapes-title: "समन्वय प्रणाली और आकृतियाँ"
  coordinate-system-and-shapes: "सरल आकृतियों को आकर्षित करना और समन्वय प्रणाली का उपयोग करना।"
  interactivity-title: "अन्तरक्रियाशीलता"
  interactivity: "माउस और कीबोर्ड के साथ अन्तरक्रियाशीलता का परिचय।"
  program-flow-title: "कार्यक्रम का प्रवाह"
  program-flow: "P5.js. में कार्यक्रम प्रवाह को नियंत्रित करने का परिचय"
  curves-title: "कर्व"
  curves: "P5.js में तीन प्रकार के कर्व्स का परिचय: आर्क्स, स्पलाइन कर्व्स और बेज़ियर कर्व्स"
  becoming-a-better-programmer-title: "एक बेहतर प्रोग्रामर बनना"
  debugging-title: "डिबगिंग"
  debugging: "सभी के लिए डिबगिंग के लिए फील्ड गाइड।"
  optimizing-title: "प्रदर्शन के लिए p5.js कोड का अनुकूलन"
  optimizing: "अपने कोड को अनुकूलित करने के लिए युक्तियों और युक्तियों का एक ट्यूटोरियल इसे तेज और सुचारू रूप से चलाने के लिए।"
  test-driven-development-title: "इकाई परीक्षण और परीक्षण संचालित विकास"
  test-driven-development: "स्थापना दिवस पर खुद को पीड़ा से बचाएं। यूनिट परीक्षण क्या है और इसका उपयोग कैसे करें? एंडी टिम्मन्स द्वारा।"
  contributing-to-the-community-title: "Contributing to the community"
  development-title: "Development"
  development: "Getting started and overview for contributing to development."
  looking-inside-title: "Looking inside p5"
  looking-inside: "A friendly intro to the file structure and tools for p5.js development, by Luisa Pereira."
  writing-tutorial-title: "Writing a tutorial"
  writing-tutorial: "A guide to writing a p5.js programming tutorial."
  writing-a-tutorial-title: "Guide to contributing p5.js tutorials"
  writing-a-tutorial-author: "This tutorial was written by Tega Brain."
  writing-a-tutorial-1: "We invite educators, contributors and general enthusiasts to contribute p5js tutorials. The p5js project makes creative coding and open source development more accessible to a diverse community and we are excited to publish tutorials on all aspects of the development process. Our learning materials so far include guides on learning p5, programming technique and how to contribute to an open source project."
  writing-a-tutorial-2: "We welcome new written tutorial contributions and this guide outlines the steps of how to propose, prepare and contribute."
  writing-a-tutorial-how-start-title: "How to get started:"
  writing-a-tutorial-how-start-1: "Check that your proposed topic has not already been covered. There is "
  writing-a-tutorial-how-start-2: "a working spreadsheet here"
  writing-a-tutorial-how-start-3: "that outlines in progress tutorials. If your topic is listed as in progress, perhaps you can add to work being done and contribute to preparing existing work for publication so please reach out to us."
  writing-a-tutorial-how-start-4: "If your topic is not already covered and is not listed as in progress, please write a few sentences on what you propose to cover and email us this description at education@p5js.org."
  writing-a-tutorial-how-prepare-title: "How to prepare a p5js tutorial for publication online:"
  writing-a-tutorial-how-prepare-1: "When your tutorial is ready for publication, please follow these steps to prepare your content for the p5js website."
  writing-a-tutorial-how-prepare-2: "Prepare the content of your tutorial as a tutorial-name.hbs file with "
  writing-a-tutorial-how-prepare-3: "this basic structure"
  writing-a-tutorial-how-prepare-4: ". As is shown in this file, it must contain a header as shown below:"
  writing-a-tutorial-how-prepare-5: "The folder containing your tutorial will be placed in the 'tutorials' folder of the p5js site. The file called index.hbs is the "
  writing-a-tutorial-how-prepare-6: "p5.js tutorials landing page,"
  writing-a-tutorial-how-prepare-7: " and the test-tutorial.hbs file is the test tutorial."
  writing-a-tutorial-how-prepare-8: "All content should go in the:"
  writing-a-tutorial-how-prepare-9: "tags on the page, with formatting defined by the &lt;h1&gt; and &lt;h2&gt; tags, the &lt;p&gt; paragraph tags as is done shown on the"
  writing-a-tutorial-how-prepare-10: "test tutorial page."
  writing-a-tutorial-how-prepare-11: "If your tutorial contains images, they are to be placed in the assets folder of the p5 site, in the location src/assets/learn/test-tutorial/images as shown below."
  writing-a-tutorial-how-prepare-12: "To correctly format code in the html of the page use the tag:"
  writing-a-tutorial-embedding-title: "Embedding p5.js sketches"
  writing-a-tutorial-embedding-1: "Using p5js means you can illustrate your tutorial with animated, interactive or editable code examples to demonstrate programming concepts. Your examples should be prepared as p5.js sketches and can be embedded into the tutorial in two ways."
  writing-a-tutorial-embedding-2: "If the example is to be editable like in "
  writing-a-tutorial-embedding-3: "the reference pages"
  writing-a-tutorial-embedding-4: " of the p5js site, the p5 sketch should be embedded into the html page using the p5js widget. Follow "
  writing-a-tutorial-embedding-5: "this guide "
  writing-a-tutorial-embedding-6: "on how to embed p5js sketches using the widget written by "
  writing-a-tutorial-embedding-7: ". You can also see this in action on the"
  writing-a-tutorial-embedding-8: " test tutorial page"
  writing-a-tutorial-embedding-9: "."
  writing-a-tutorial-embedding-10: "If the example is to be animated and/or interactive but not editable. The p5.js sketch should be embedded into the page as an iframe as described below."
  writing-a-tutorial-iframe-title: "Embed a p5 sketch using an iframe"
  writing-a-tutorial-iframe-1: "An iframe is like creating a window through which you can see another page, sandboxed from the rest of your page. In this case it will be a window to the index.html containing your p5.js sketch. "
  writing-a-tutorial-iframe-2: "Put your p5 sketches in the /src/assets/learn folder of the site, in a folder labelled with the name of your sketch as shown in the screenshot. This is where all the images and p5 sketches linked by iframe should be stored."
  writing-a-tutorial-iframe-3: "In the subfolders containing your p5 examples there should be a sketch.js file and the embed.html file for the sketch. "
  writing-a-tutorial-iframe-4: "Make sure your embed.html file has the correct paths to the p5 libraries of the site. If your file structure is the same as above, the path to the p5.js library should be \"../../../js/p5.min.js\"."
  writing-a-tutorial-iframe-5: "You can then embed the p5js index files as iframes in the .hbs file that contains your tutorial content. The embed code for the iframe would then be: "
  writing-a-tutorial-iframe-6: "Styling for the iframe (this could directly into the post or in a stylesheet):  "
  writing-a-tutorial-iframe-7: "Here you can see the naked sketch running: "
  writing-a-tutorial-iframe-8: "And here it is embedded in the p5 site using the code below:  "
  writing-a-tutorial-iframe-9: "One thing to note is that you need to manually set the size of the iframe, so it works best if things are a standard size."
  writing-a-tutorial-iframe-10: "Also note that the links to the p5.js library files do not happen from the .eps page with all the tutorial content. Instead they will be located in the html page that is rendering your sketch (in this case, called embed.html)."
  writing-a-tutorial-iframe-11: "More information on embedding p5.js sketches can be found "
  writing-a-tutorial-embed-iframe-12: "here."
  writing-a-tutorial-finishing-title: "Finishing up"
  writing-a-tutorial-finishing-1: "Once your have finished writing your tutorial and your content has been given the thumbs up. Fork the p5.js website repository, prepare your content as described above and then issue a pull request to the p5.js website repository so we can publish your contribution!"
  writing-a-tutorial-finishing-2: "Thank you!"
  color-description1: "This tutorial is from the book Learning Processing by Daniel Shiffman, published by Morgan Kaufmann, © 2008 Elsevier Inc. All rights reserved. It was ported to P5 by Kelly Chang. If you see any errors or have comments, "
  color-description2: " please let us know."
  color-title: "Color"
  color-p1x1: "In the digital world, when we want to talk about a color, precision is required. Saying \"Hey, can you make that circle bluish-green?\" will not do. Color, rather, is defined as a range of numbers. Let's start with the simplest case: black & white or grayscale. 0 means black, 255 means white. In between, every other number—50, 87, 162, 209, and so on—is a shade of gray ranging from black to white."
  color-p2x1: "By adding the "
  color-p2x2: " and "
  color-p2x3: " functions before something is drawn, we can set the color of any given shape. There is also the function "
  color-p2x4: ", which sets a background color for the window. Here's an example."
  color-code1: "background(255);    // Setting the background to white \n stroke(0);          // Setting the outline (stroke) to black \n fill(150);          // Setting the interior of a shape (fill) to grey \n rect(50,50,75,100); // Drawing the rectangle"
  color-p3x1: "Stroke or fill can be eliminated with the functions: "
  color-p3x2: " and "
  color-p3x3: ". Our instinct might be to say \"stroke(0)\" for no outline, however, it is important to remember that 0 is not \"nothing\", but rather denotes the color black. Also, remember not to eliminate both—with "
  color-p3x4: " and "
  color-p3x5: ", nothing will appear!"
  color-p4x1: "In addition, if we draw two shapes, p5.js will always use the most recently specified stroke and fill, reading the code from top to bottom."
  color-rgb-title: "RGB Color"
  color-rgb-p1x1: "Remember finger painting? By mixing three \"primary\" colors, any color could be generated. Swirling all colors together resulted in a muddy brown. The more paint you added, the darker it got. Digital colors are also constructed by mixing three primary colors, but it works differently from paint. First, the primaries are different: red, green, and blue (i.e., \"RGB\" color). And with color on the screen, you are mixing light, not paint, so the mixing rules are different as well."
  color-rgb-li1: "Red + Green = Yellow"
  color-rgb-li2: "Red + Blue = Purple"
  color-rgb-li3: "Green + Blue = Cyan (blue-green)"
  color-rgb-li4: "Red + Green + Blue = White"
  color-rgb-li5: "No colors = Black"
  color-rgb-p2x1: "This assumes that the colors are all as bright as possible, but of course, you have a range of color available, so some red plus some green plus some blue equals gray, and a bit of red plus a bit of blue equals dark purple. While this may take some getting used to, the more you program and experiment with RGB color, the more it will become instinctive, much like swirling colors with your fingers. And of course you can't say \"Mix some red with a bit of blue,\" you have to provide an exact amount. As with grayscale, the individual color elements are expressed as ranges from 0 (none of that color) to 255 (as much as possible), and they are listed in the order R, G, and B. You will get the hang of RGB color mixing through experimentation, but next we will cover some code using some common colors."
  color-transparency-title: "Color Transparency"
  color-transparency-p1x1: "In addition to the red, green, and blue components of each color, there is an additional optional fourth component, referred to as the color's \"alpha\". Alpha means transparency and is particularly useful when you want to draw elements that appear partially see-through on top of one another. The alpha values for an image are sometimes referred to collectively as the \"alpha channel\" of an image."
  color-transparency-p2x1: "It is important to realize that pixels are not literally transparent, this is simply a convenient illusion that is accomplished by blending colors. Behind the scenes, p5.js takes the color numbers and adds a percentage of one to a percentage of another, creating the optical perception of blending. (If you are interested in programming \"rose-colored\" glasses, this is where you would begin.)"
  color-transparency-p3x1: "Alpha values also range from 0 to 255, with 0 being completely transparent (i.e., 0% opaque) and 255 completely opaque (i.e., 100% opaque)."
  color-custom-ranges-title: "Custom Color Ranges"
  color-custom-ranges-p1x1: "RGB color with ranges of 0 to 255 is not the only way you can handle color in p5.js, in fact, it allows us to think about color any way we like. For example, you might prefer to think of color as ranging from 0 to 100 (like a percentage). You can do this by specifying a custom "
  color-custom-ranges-p2x1: "The above function says: \"OK, we want to think about color in terms of red, green, and blue. The range of RGB values will be from 0 to 100.\""
  color-custom-ranges-p3x1: "Although it is rarely convenient to do so, you can also have different ranges for each color component:"
  color-custom-ranges-p4x1: "Now we are saying \"Red values go from 0 to 100, green from 0 to 500, blue from 0 to 10, and alpha from 0 to 255.\""
  color-custom-ranges-p5x1: "Finally, while you will likely only need RGB color for all of your programming needs, you can also specify colors in the HSB (hue, saturation, and brightness) mode. Without getting into too much detail, HSB color works as follows:"
  color-custom-ranges-li1x1: "Hue"
  color-custom-ranges-li1x2: "—The color type, ranges from 0 to 255 by default."
  color-custom-ranges-li2x1: "Saturation"
  color-custom-ranges-li2x2: "—The vibrancy of the color, 0 to 255 by default."
  color-custom-ranges-li3x1: "Brightness"
  color-custom-ranges-li3x2: "—The, well, brightness of the color, 0 to 255 by default."
  color-custom-ranges-p6x1: "With "
  color-custom-ranges-p6x2: " you can set your own ranges for these values. Some prefer a range of 0-360 for hue (think of 360 degrees on a color wheel) and 0-100 for saturation and brightness (think of 0-100%)."
  coordinate-system-description1: "This tutorial is from the book "
  coordinate-system-description2: "Learning Processing"
  coordinate-system-description3: " by Daniel Shiffman, published by Morgan Kaufmann, © 2008 Elsevier Inc. All rights reserved. It was ported to p5.js by Alex Yixuan Xu. If you see any errors or have comments, please "
  coordinate-system-description4: "let us know"
  coordinate-system-description5: "."
  coordinate-system-description-title: "Coordinate System and Shapes"
  coordinate-system-description-p1x1: "Before we begin programming with p5, we must first channel our eighth grade selves, pull out a piece of graph paper, and draw a line. The shortest distance between two points is a good old fashioned line, and this is where we begin, with two points on that graph paper."
  coordinate-system-description-p2x1: "The above figure shows a line between point A (1,0) and point B (4,5). If you wanted to direct a friend of yours to draw that same line, you would give them a shout and say \"draw a line from the point one-zero to the point four-five, please.\" Well, for the moment, imagine your friend was a computer and you wanted to instruct this digital pal to display that same line on its screen. The same command applies (only this time you can skip the pleasantries and you will be required to employ a precise formatting). Here, the instruction will look like this:"
  coordinate-system-description-p3x1: "Even without having studied the syntax of writing code, the above statement should make a fair amount of sense. We are providing a command (which we will refer to as a \"function\") for the machine to follow entitled \"line.\" In addition, we are specifying some arguments for how that line should be drawn, from point A (1,0) to point B (4,5). If you think of that line of code as a sentence, the function is a verb and the arguments are the objects of the sentence. The code sentence also ends with a semicolon instead of a period."
  coordinate-system-description-p4x1: "The key here is to realize that the computer screen is nothing more than a fancier piece of graph paper. Each pixel of the screen is a coordinate - two numbers, an \"x\" (horizontal) and a \"y\" (vertical) - that determines the location of a point in space. And it is our job to specify what shapes and colors should appear at these pixel coordinates."
  coordinate-system-description-p5x1: "Nevertheless, there is a catch here. The graph paper from eighth grade (\"Cartesian coordinate system\") placed (0,0) in the center with the y-axis pointing up and the x-axis pointing to the right (in the positive direction, negative down and to the left). The coordinate system for pixels in a computer window, however, is reversed along the y-axis. (0,0) can be found at the top left with the positive direction to the right horizontally and down vertically."
  coordinate-system-simple-shapes-title: "Simple Shapes"
  coordinate-system-simple-shapes-p1x1: "The vast majority of the programming examples you'll see with p5 are visual in nature. These examples, at their core, involve drawing shapes and setting pixels. Let's begin by looking at four primitive shapes."
  coordinate-system-simple-shapes-p2x1: "For each shape, we will ask ourselves what information is required to specify the location and size (and later color) of that shape and learn how p5 expects to receive that information. In each of the diagrams below, we'll assume a window with a width of 10 pixels and height of 10 pixels. This isn't particularly realistic since when you really start coding you will most likely work with much larger windows (10x10 pixels is barely a few millimeters of screen space.) Nevertheless for demonstration purposes, it is nice to work with smaller numbers in order to present the pixels as they might appear on graph paper (for now) to better illustrate the inner workings of each line of code."
  coordinate-system-simple-shapes-p3x1: "A "
  coordinate-system-simple-shapes-p3x2: " is the easiest of the shapes and a good place to start. To draw a point, we only need an x and y coordinate."
  coordinate-system-simple-shapes-p4x1: "A "
  coordinate-system-simple-shapes-p4x2: " isn't terribly difficult either and simply requires two points: (x1,y1) and (x2,y2):"
  coordinate-system-simple-shapes-p5x1: "Once we arrive at drawing a "
  coordinate-system-simple-shapes-p5x2: ", things become a bit more complicated. In p5, a rectangle is specified by the coordinate for the top left corner of the rectangle, as well as its width and height."
  coordinate-system-simple-shapes-p6x1: "A second way to draw a rectangle involves specifying the centerpoint, along with width and height. If we prefer this method, we first indicate that we want to use the "
  coordinate-system-simple-shapes-p6x2: " mode before the instruction for the rectangle itself. Note that p5 is case-sensitive."
  coordinate-system-simple-shapes-p7x1: "Finally, we can also draw a rectangle with two points (the top left corner and the bottom right corner). The mode here is "
  coordinate-system-simple-shapes-p7x2: ". Note this example gives the same result on screen as the example above."
  coordinate-system-simple-shapes-p8x1: "Once we have become comfortable with the concept of drawing a rectangle, an "
  coordinate-system-simple-shapes-p8x2: " is a snap. In fact, it is identical to "
  coordinate-system-simple-shapes-p8x3: " with the difference being that an ellipse is drawn where the bounding box of the rectangle would be. The default mode for "
  coordinate-system-simple-shapes-p8x4: " is "
  coordinate-system-simple-shapes-p8x5: ", rather than "
  coordinate-system-simple-shapes-p8x6: "."
  coordinate-system-simple-shapes-p9x1: "It is important to acknowledge that these ellipses do not look particularly circular. p5 has a built-in methodology for selecting which pixels should be used to create a circular shape. Zoomed in like this, we get a bunch of squares in a circle-like pattern, but zoomed out on a computer screen, we get a nice round ellipse. p5 also gives us the power to develop our own algorithms for coloring in individual pixels (in fact, we can already imagine how we might do this using \"point\" over and over again), but for now, we are content with allowing the \"ellipse\" statement to do the hard work. (For more about pixels, start with: the "
  coordinate-system-simple-shapes-p9x2: "pixels reference page"
  coordinate-system-simple-shapes-p9x3: ", though be warned this is a great deal more advanced than this tutorial.)"
  coordinate-system-simple-shapes-p10x1: "Now let's look at what some code with shapes in more realistic setting, with window dimensions of 200 by 200. Note the use of the createCanvas() function to specify the width and height of the window."

test-tutorial:

libraries:
  Libraries: "लाइब्रिरीज़"
  p5.dom: "p5.dom lets you interact with HTML5 objects beyond the canvas, including video, audio, webcam, input, and text."
  p5.sound: "p5.sound extends p5 with Web Audio functionality including audio input, playback, analysis and synthesis."
  p5.accessibility: "p5.accessibility makes the p5 canvas more accessible to people who are blind and visually impaired."
  Contributed: "Contributed"
  p5.serial1: "p5.serial enables serial communication between devices that support serial (RS-232) and p5 sketches running in the browser. Created by "
  p5.serial2: ", with contributions from "
  p5.serial3: " and "
  p5.collide2D: "p5.collide2D provides tools for calculating collision detection for 2D geometry with p5.js. Created by "
  rita.js: "RiTa.js provides a set of natural language processing objects for generative literature. Created by "
  p5.geolocation: "p5.geolocation provides techniques for acquiring, watching, calculating, and geofencing user locations for p5.js. Created by "
  p5.speech: "p5.speech provides simple, clear access to the Web Speech and Speech Recognition APIs, allowing for the easy creation of sketches that can talk and listen. Created by "
  p5.bots: "With p5.bots you can interact with your Arduino (or other microprocessor) from within the browser. Use sensor data to drive a sketch; use a sketch to drive LEDs, motors, and more! Created by "
  grafica.js: "grafica.js lets you add simple but highly configurable 2D plots to your p5.js sketches. Created by "
  p5.play: "p5.play provides sprites, animations, input and collision functions for games and gamelike applications. Created by "
  p5.gui: "p5.gui generates a graphical user interface for your p5.js sketches. Created by "
  p5.gibber: "p5.gibber provides rapid music sequencing and audio synthesis capabilities. Created by "
  p5.particle: "The Particle and Fountain objects can be used to create data-driven effects that are defined through user structures or JSON input and user-draw functions. Created by "
  p5.scribble: "Draw 2D primitives in a sketchy look. Created by Janneck Wullschleger, based on a port of the original Processing library "
  p5.tiledmap1: "p5.tiledmap provides drawing and helper functions to include maps made with"
  p5.tiledmap2: "in your sketches. Created by "
  p5.dimensions1: "p5.dimensions extends p5.js' vector functions to work in any number of dimensions. Created by "
  p5.dimensions2: " and "
  p5.scenemanager: "p5.SceneManager helps you create sketches with multiple states / scenes. Each scene is a like a sketch within the main sketch. Created by "
  mappa: "Mappa provides a set of tools for working with static maps, tile maps, and geo-data. Useful when building geolocation-based visual representations. Created by "
  p5.func: "p5.func is a p5 extension that provides new objects and utilities for function generation in the time, frequency, and spatial domains. Created by "
  p5.voronoi: "p5.voronoi provides a set of tools to draw and utilize voronoi diagrams in your p5.js sketches. Created by "
  using-a-library-title: "Using a library"
  using-a-library1: "A p5.js library can be any JavaScript code that extends or adds to the p5.js core functionality. There are two categories of libraries. Core libraries ("
  using-a-library2: " and "
  using-a-library3: ") are part of the p5.js distribution, while contributed libraries are developed, owned, and maintained by members of the p5.js community."
  using-a-library4: "To include a library in your sketch, link it into your HTML file, after you have linked in p5.js. An example HTML file might look like this:"
  create-your-own-title: "Create Your Own"
  create-your-own1: "p5.js welcomes libraries contributed by others! Check out the"
  create-your-own2: "libraries tutorial"
  create-your-own3: "for more specifics about how to create one."

community:
  community-title: "समुदाय"
  community-statement-title: "p5.js Community Statement"
  community-statement1: "p5.js is a community interested in exploring the creation of art and design with technology."
  community-statement2: "We are a community of, and in solidarity with, people from every gender identity and expression, sexual orientation, race, ethnicity, language, neuro-type, size, ability, class, religion, culture, subculture, political opinion, age, skill level, occupation, and background. We acknowledge that not everyone has the time, financial means, or capacity to actively participate, but we recognize and encourage involvement of all kinds. We facilitate and foster access and empowerment. We are all learners."
  community-statement3: "We like these hashtags: #noCodeSnobs (because we value community over efficiency), #newKidLove (because we all started somewhere), #unassumeCore (because we don't assume knowledge), and #BlackLivesMatter (because of course)."
  in-practice-title: "In practice:"
  in-practice1: " We are not code snobs. We do not assume knowledge or imply there are things that somebody should know. "
  in-practice2: "We insist on actively engaging with requests for feedback regardless of their complexity."
  in-practice3: "We welcome newcomers and prioritize the education of others. We strive to approach all tasks with the enthusiasm of a newcomer. Because we believe that newcomers are just as valuable in this effort as experts."
  in-practice4: "We consistently make the effort to actively recognize and validate multiple types of contributions."
  in-practice5: "We are always willing to offer help or guidance."
  in-times-conflict-title: "In times of conflict:"
  in-times-conflict1: "We listen."
  in-times-conflict2: "We clearly communicate while acknowledging other's feelings."
  in-times-conflict3: "We admit when we're wrong, apologize, and accept responsibility for our actions."
  in-times-conflict4: "We are continuously seeking to improve ourselves and our community."
  in-times-conflict5: "We keep our community respectful and open."
  in-times-conflict6: "We make everyone feel heard."
  in-times-conflict7: "We are mindful and kind in our interactions."
  in-the-future-title: "In the future:"
  in-the-future1: "The future is now."
  contribute-title: "Contribute"
  contribute1: "Our community is always looking for enthusiasts to help in all different ways."
  develop-title: "Develop."
  develop1: "GitHub"
  develop2: " is the main place where code is collected, issues are documented, and discussions about code are had. Check out the "
  develop3: " development tutorial"
  develop4: " to get started, or "
  develop5: "create your own library."
  document-title: "Document."
  document1: " Everyone loves documentation. Help is needed "
  document2: "porting examples"
  document3: ", and"
  document4: " adding documentation"
  document5: ", and creating tutorials."
  teach-title: "Teach."
  teach1: " Teach a workshop, a class, a friend, a collaborator! Tag @p5xjs on Twitter and we will do our best to share what you're doing."
  create-title: "Create."
  create1: " p5.js is looking for designers, artists, coders, programmers to bring your creative and amazing work to show on the front page and inspire other people. Submit your work to "
  create2: "hello@p5js.org"
  create3: "."
  donate-title: "Donate."
  donate1: " p5.js is free and open source and made by artists. Help support the development of p5.js through a donation to the "
  donate2: "Processing Foundation"
  donate3: "."
  contributors-conference-title: "Contributors Conference"
  contributors-conference1: "In 2015, p5.js held its first-ever "
  contributors-conference2: "contributors conference"
  contributors-conference3: ". Artists, designers, developers, educators, and more joined forces at "
  contributors-conference4: "CMU's Studio for Creative Inquiry"
  contributors-conference5: " to make p5.js awesome."
  mailing-list-title: "Mailing list"
  mailing-list-1: "Enter your email address to receive occasional updates from the Processing Foundation."
  people-title: "People"
  people1: "blah"

books:
  books-title: "Books"

examples:
  Examples: "उदाहरण"
  back-examples: "Back to Examples"
  Structure: "Structure"
  Form: "Form"
  Data: "Data"
  Arrays: "Arrays"
  Control: "Control"
  Image: "Image"
  Color: "Color"
  Math: "Math"
  Simulate: "Simulate"
  Interaction: "Interaction"
  Objects: "Objects"
  Lights: "Lights"
  Motion: "Motion"
  Instance_Mode: "Instance Mode"
  Dom: "DOM"
  Drawing: "Drawing"
  Transform: "Transform"
  Typography: "Typography"
  3D: "3D"
  Input: "Input"
  Advanced_Data: "Advanced Data"
  Sound: "Sound"
  Mobile: "Mobile"
  Hello_P5: "Hello p5"

contributors-conference:
  contributors-conference-title: "p5.js योगदानकर्ता सम्मेलन"
  contributors-conference-date: "25-31 मई"
  contributors-conference1: "लगभग 30 प्रतिभागियों के एक विविध समूह ने "
  contributors-conference2: " में एक सप्ताह बिताया , P5.js प्रोग्रामिंग वातावरण के कोड, प्रलेखन और सामुदायिक आउटरीच टूल को आगे बढ़ाना। प्रतिभागी हांगकांग, सिएटल, लॉस एंजिल्स, बोस्टन और न्यूयॉर्क के रूप में दूर से आए थे। अधिकांश रचनात्मक प्रौद्योगिकी, इंटरैक्शन डिज़ाइन और नए-मीडिया कला के क्षेत्र में काम करने वाले पेशेवर थे, लेकिन समूह में कार्नेगी मेलन के स्कूल ऑफ आर्ट एंड आर्किटेक्चर के आधा दर्जन स्नातक और स्नातक छात्र शामिल थे।"
  contributors-conference-participants-title: "प्रतिभागि"
  contributors-conference-diversity-title: "विविधता"
  contributors-conference-diversity1: "तकनीकी विकास के साथ-साथ, इस सम्मेलन का मुख्य फोकस आउटरीच, समुदाय और विविधता था। सम्मेलन एक पैनल के साथ शुरू हुआ"
  contributors-conference-diversity2: "विविधता: रेस, जेंडर, एबिलिटी पर सात आवाज़ें & amp; FLOSS और इंटरनेट के लिए क्लास"
  contributors-conference-diversity3: " ।"
  contributors-conference-diversity4: ""
  contributors-conference-diversity5: "और"
  contributors-conference-diversity6: " "
  contributors-conference-diversity7: "द्वारा आयोजित , वह पैनल मंगलवार, 25 मई 2015 को कार्नेगी मेलॉन विश्वविद्यालय में क्रेगे सभागार में हुआ। वक्ताओं में"
  contributors-conference-diversity8: "और"
  contributors-conference-diversity9: " शामिल थे।"
  contributors-conference-support-title: "समर्थन"
  contributors-conference-support1: "हमारे योगदानकर्ता सम्मेलन का आयोजन कार्नेगी मेलन विश्वविद्यालय में"
  contributors-conference-support2: ", जो कला, विज्ञान, प्रौद्योगिकी और संस्कृति के चौराहों पर एक अकादमिक प्रयोगशाला है।"
  contributors-conference-support3: "इस कार्यक्रम को "
  contributors-conference-support4: " अनुदान से और "
  contributors-conference-support5: "और"
  contributors-conference-support6: "के उदार सहयोग से संभव हुआ। धन्यवाद!"

reference:
  Reference: "संदर्भ"
